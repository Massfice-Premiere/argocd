apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: apps
  namespace: argocd
spec:
  goTemplate: true
  generators:
  - git:
      repoURL: git@github.com:Massfice-Premiere/argocd.git
      revision: HEAD
      files:
      - path: apps/_configs/**.json
  template:
    metadata:
      name: '{{ .app_name }}-init'
      # labels:
      #   argocd-image-updater.argoproj.io/write-back-method: git
      #   argocd-image-updater.argoproj.io/write-back-target: kustomization
      #   argocd-image-updater.argoproj.io/git-branch: main
        # '{{- range .app_containers }}'
        # argocd-image-updater.argoproj.io/image-list: '{{ .id }}={{ .image }}'
        # argocd-image-updater.argoproj.io/{{ .id }}.update-strategy: '{{ .strategy }}'
        # '{{- end }}'  
    spec:
      project: apps
      source:
        repoURL: git@github.com:Massfice-Premiere/argocd.git
        targetRevision: HEAD
        path: apps/app
        helm:
          values: |
            app_name: {{ .app_name }}
            app_namespace: {{ .app_namespace }}
            app_repo: git@github.com:Massfice-Premiere/argocd.git
            app_path: apps/{{ .app_dir }}
            app_labels:
              - key: argocd-image-updater.argoproj.io/write-back-method
                value: git
              - key: argocd-image-updater.argoproj.io/write-back-target
                value: kustomization
              - key: argocd-image-updater.argoproj.io/git-branch
                value: main
              - key: argocd-image-updater.argoproj.io/image-list
                value: {{ range $index, $element := .app_containers }}{{ if $index }},{{ end }}{{ $element.id }}={{ $element.image }}{{end}}
      destination:
        server: https://kubernetes.default.svc
        namespace: argocd
      syncPolicy:
        syncOptions:
          - CreateNamespace=true
        automated:
          selfHeal: true
          prune: true
          allowEmpty: true
